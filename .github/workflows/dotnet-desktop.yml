name: .NET Core Desktop

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
   

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest

    env:
      Solution_Name: NitterEnhancedViewer.sln
      Test_Project_Path: NitterEnhancedViewer\NitterEnhancedViewer.csproj

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    - name: Execute unit tests
      run: dotnet test

    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Build the application
      run: msbuild $env:Solution_Name /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Determine version
      id: determine_version
      run: echo "version=1.0.$(powershell -command \"(Get-Date -Format yyyyMMddHHmmss)\")" >> $GITHUB_ENV
  
    - name: Debug version output
      run: echo "Version is:${{ steps.determine_version.outputs.version }}"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.version }}
        release_name: v${{ env.version }}
        draft: false
        prerelease: false

    - name: Zip the build artifacts
      run: |
        mkdir -p release
        Compress-Archive -Path NitterEnhancedViewer/bin/Release/* -DestinationPath release/NitterEnhancedViewer.zip    

    - name: Upload build artifacts
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: release/NitterEnhancedViewer.zip
        asset_name: NitterEnhancedViewer.zip
        asset_content_type: application/zip
      env:
         GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
